"한국 여행지 테스트" 추가🔑 핵심 원칙범용 엔진 통합: MBTI-AT 32가지 유형 계산 로직($E/I, S/N, T/F, J/P, A/T$ 5축)을 유지하고, 결과물만 '한국 여행지' 데이터로 교체합니다.데이터 분리: 질문 데이터(questionsData), 결과 데이터(resultsData), 다국어 텍스트(localization)를 명확히 분리하여 기존 프로젝트와의 충돌을 방지하고 확장을 용이하게 합니다.핵심 지표 구현: 요청된 정량 지표인 '여행 성향 일치율' 계산 로직을 구현합니다.📌 파일 구조 및 적용 가이드이 코드는 주로 script.js 파일에 추가되는 것을 가정하며, HTML/CSS는 테스트 컨테이너만 준비되어 있다고 전제합니다.1. 테스트 컨테이너 HTML (index.html 또는 test.html)<body> 내에 아래 구조가 준비되어야 합니다. (기존 다국어 기능과 충돌 방지를 위해, 이 테스트 관련 ID는 travel-test- 접두사를 사용합니다.)HTML<div id="travel-test-container">
    <div id="travel-test-start-page">
        <input type="text" id="travel-test-name-input" placeholder="당신의 이름을 입력하세요 (for Share Link)">
        <button id="travel-test-start-button">테스트 시작</button>
    </div>

    <div id="travel-test-questions-page" style="display: none;">
        <p id="travel-test-question-number">1 / 18</p>
        <h3 id="travel-test-question-text">질문 텍스트</h3>
        <button class="travel-test-answer-button" data-score="1">선택지 1</button>
        <button class="travel-test-answer-button" data-score="-1">선택지 2</button>
    </div>

    <div id="travel-test-result-page" style="display: none;">
        <h2 id="travel-test-result-mbti">당신의 MBTI-AT 유형은: XXXX-X</h2>
        <h1 id="travel-test-result-title">어울리는 한국 여행지 결과</h1>
        <p id="travel-test-result-description">결과 설명</p>
        <p id="travel-test-match-rate">여행 성향 일치율: 00%</p>
        <button id="travel-test-share-button">결과 링크 공유</button>
    </div>
</div>
2. JavaScript 개발 프롬프트 (script.js 통합용)아래 코드를 기존 script.js 파일의 다른 테스트 로직과 분리하여 추가하십시오. (예: 파일 최하단에 추가)JavaScript// ====================================================================
// [Gems Product Manager] 새로운 '한국 여행지 테스트' 로직 통합
// 1. 데이터 정의 (18개 질문, 32가지 결과, 지표 정의)
// 2. 테스트 로직 (점수 계산, MBTI-AT 매핑)
// 3. UI/UX (MVP 기능 구현)
// ====================================================================

/**
 * 1. 핵심 데이터 구조 정의
 * - total: 질문 수 (18개 고정)
 * - axis: MBTI 5축 (E/I, S/N, T/F, J/P, A/T)
 * - score: 각 축별 배점 (E: +1, I: -1)
 */
const travelTest = {
    // 18개 질문 데이터 정의: [axis, score_option1, question_key_for_localization]
    // 배분: E/I(4), S/N(4), T/F(4), J/P(4), A/T(2)
    questionsData: [
        // E/I 축 (외향/내향)
        ['E', 1, 'travel_q1'], ['E', -1, 'travel_q2'], ['E', 1, 'travel_q3'], ['E', -1, 'travel_q4'],
        // S/N 축 (감각/직관)
        ['S', 1, 'travel_q5'], ['S', -1, 'travel_q6'], ['S', 1, 'travel_q7'], ['S', -1, 'travel_q8'],
        // T/F 축 (사고/감정)
        ['T', 1, 'travel_q9'], ['T', -1, 'travel_q10'], ['T', 1, 'travel_q11'], ['T', -1, 'travel_q12'],
        // J/P 축 (판단/인식)
        ['J', 1, 'travel_q13'], ['J', -1, 'travel_q14'], ['J', 1, 'travel_q15'], ['J', -1, 'travel_q16'],
        // A/T 축 (확고/신중)
        ['A', 1, 'travel_q17'], ['A', -1, 'travel_q18']
    ],

    // MBTI-AT 32가지 유형별 결과물 (여행지 명칭 + 설명)
    // Localization을 위해 Title과 Description은 Key 형태로 저장
    resultsData: {
        'ESTJA': { titleKey: 'r1_title', descKey: 'r1_desc', matchBase: 100 },
        'ESTJT': { titleKey: 'r2_title', descKey: 'r2_desc', matchBase: 90 },
        'ESTPA': { titleKey: 'r3_title', descKey: 'r3_desc', matchBase: 100 },
        'ESTPT': { titleKey: 'r4_title', descKey: 'r4_desc', matchBase: 95 },
        'ESFJA': { titleKey: 'r5_title', descKey: 'r5_desc', matchBase: 100 },
        'ESFJT': { titleKey: 'r6_title', descKey: 'r6_desc', matchBase: 90 },
        'ESFPA': { titleKey: 'r7_title', descKey: 'r7_desc', matchBase: 100 },
        'ESFPT': { titleKey: 'r8_title', descKey: 'r8_desc', matchBase: 95 },
        'ENTJA': { titleKey: 'r9_title', descKey: 'r9_desc', matchBase: 100 },
        'ENTJT': { titleKey: 'r10_title', descKey: 'r10_desc', matchBase: 90 },
        'ENTPA': { titleKey: 'r11_title', descKey: 'r11_desc', matchBase: 100 },
        'ENTPT': { titleKey: 'r12_title', descKey: 'r12_desc', matchBase: 95 },
        'ENFJA': { titleKey: 'r13_title', descKey: 'r13_desc', matchBase: 100 },
        'ENFJT': { titleKey: 'r14_title', descKey: 'r14_desc', matchBase: 90 },
        'ENFPA': { titleKey: 'r15_title', descKey: 'r15_desc', matchBase: 100 },
        'ENFPT': { titleKey: 'r16_title', descKey: 'r16_desc', matchBase: 95 },
        'ISTJA': { titleKey: 'r17_title', descKey: 'r17_desc', matchBase: 100 },
        'ISTJT': { titleKey: 'r18_title', descKey: 'r18_desc', matchBase: 90 },
        'ISTPA': { titleKey: 'r19_title', descKey: 'r19_desc', matchBase: 100 },
        'ISTPT': { titleKey: 'r20_title', descKey: 'r20_desc', matchBase: 95 },
        'ISFJA': { titleKey: 'r21_title', descKey: 'r21_desc', matchBase: 100 },
        'ISFJT': { titleKey: 'r22_title', descKey: 'r22_desc', matchBase: 90 },
        'ISFPA': { titleKey: 'r23_title', descKey: 'r23_desc', matchBase: 100 },
        'ISFPT': { titleKey: 'r24_title', descKey: 'r24_desc', matchBase: 95 },
        'INTJA': { titleKey: 'r25_title', descKey: 'r25_desc', matchBase: 100 },
        'INTJT': { titleKey: 'r26_title', descKey: 'r26_desc', matchBase: 90 },
        'INTPA': { titleKey: 'r27_title', descKey: 'r27_desc', matchBase: 100 },
        'INTPT': { titleKey: 'r28_title', descKey: 'r28_desc', matchBase: 95 },
        'INFJA': { titleKey: 'r29_title', descKey: 'r29_desc', matchBase: 100 },
        'INFJT': { titleKey: 'r30_title', descKey: 'r30_desc', matchBase: 90 },
        'INFPA': { titleKey: 'r31_title', descKey: 'r31_desc', matchBase: 100 },
        'INFPT': { titleKey: 'r32_title', descKey: 'r32_desc', matchBase: 95 }
    },

    // 2.3 핵심 지표 정의: '여행 성향 일치율'
    // - 측정 논리: 성향이 강할수록(절대값) 일치율 점수 기여도 높음.
    // - 최대 절대 점수: E/I(4), S/N(4), T/F(4), J/P(4), A/T(2) => 총 18점
    MAX_SCORE: 18,
    resultScores: { E: 0, S: 0, T: 0, J: 0, A: 0 },
    currentQuestion: 0,
    userName: ''
};

// ====================================================================
// 2. 테스트 로직 함수
// ====================================================================

/**
 * 테스트 시작 버튼 이벤트 핸들러 초기화
 */
function initTravelTest() {
    document.getElementById('travel-test-start-button').addEventListener('click', () => {
        const nameInput = document.getElementById('travel-test-name-input');
        travelTest.userName = nameInput.value.trim() || '여행자';
        
        // 점수 초기화
        travelTest.resultScores = { E: 0, S: 0, T: 0, J: 0, A: 0 };
        travelTest.currentQuestion = 0;
        
        // UI 전환: 시작 -> 질문
        document.getElementById('travel-test-start-page').style.display = 'none';
        document.getElementById('travel-test-result-page').style.display = 'none';
        document.getElementById('travel-test-questions-page').style.display = 'block';

        loadQuestion();
    });

    // 답변 버튼 클릭 이벤트 리스너 설정 (이벤트 위임)
    document.getElementById('travel-test-questions-page').addEventListener('click', (e) => {
        if (e.target.classList.contains('travel-test-answer-button')) {
            processAnswer(e.target.dataset.score);
        }
    });
}

/**
 * 현재 질문을 로드하고 UI에 표시
 */
function loadQuestion() {
    if (travelTest.currentQuestion >= travelTest.questionsData.length) {
        // 모든 질문 완료
        calculateResult();
        return;
    }

    const questionIndex = travelTest.currentQuestion;
    const [axis, score, textKey] = travelTest.questionsData[questionIndex];

    // TODO: 다국어 함수 (예: getLocalizedText)를 사용하여 실제 텍스트 로드 필요
    // 현재는 더미 텍스트로 대체
    const questionText = `[${axis}축] ${textKey}에 대한 질문입니다.`; 
    const option1Text = '선택지 1 (점수: ' + score + ')';
    const option2Text = '선택지 2 (점수: ' + (-score) + ')';

    document.getElementById('travel-test-question-number').textContent = `${questionIndex + 1} / ${travelTest.questionsData.length}`;
    document.getElementById('travel-test-question-text').textContent = questionText;
    
    const buttons = document.querySelectorAll('.travel-test-answer-button');
    buttons[0].textContent = option1Text;
    buttons[0].dataset.score = score; // 옵션 1 점수
    buttons[1].textContent = option2Text;
    buttons[1].dataset.score = -score; // 옵션 2 점수
}

/**
 * 답변 처리 및 다음 질문 로드
 * @param {string} scoreString - 클릭된 답변의 점수 ('1' 또는 '-1')
 */
function processAnswer(scoreString) {
    const score = parseInt(scoreString, 10);
    const [axis] = travelTest.questionsData[travelTest.currentQuestion];

    // 점수 누적
    travelTest.resultScores[axis] += score;
    travelTest.currentQuestion++;
    
    // 다음 질문 로드
    loadQuestion();
}

/**
 * 최종 MBTI-AT 결과 및 일치율 계산 및 표시
 */
function calculateResult() {
    const scores = travelTest.resultScores;
    
    // 1. MBTI-AT 유형 매핑 로직
    const type = 
        (scores.E >= 0 ? 'E' : 'I') + // E/I: E >= 0 (E) / E < 0 (I)
        (scores.S >= 0 ? 'S' : 'N') + // S/N: S >= 0 (S) / S < 0 (N)
        (scores.T >= 0 ? 'T' : 'F') + // T/F: T >= 0 (T) / T < 0 (F)
        (scores.J >= 0 ? 'J' : 'P') + // J/P: J >= 0 (J) / J < 0 (P)
        (scores.A >= 0 ? 'A' : 'T'); // A/T: A >= 0 (A) / A < 0 (T)

    const resultData = travelTest.resultsData[type];
    
    // 2. '여행 성향 일치율' (핵심 지표) 계산 로직
    // - (총 절대 점수 / 최대 점수) * 100
    const absoluteScore = Math.abs(scores.E) + Math.abs(scores.S) + Math.abs(scores.T) + Math.abs(scores.J) + Math.abs(scores.A);
    const matchRate = Math.round((absoluteScore / travelTest.MAX_SCORE) * 100);
    
    // 3. 결과 페이지 업데이트
    // TODO: 다국어 함수를 사용하여 결과 제목/설명 로드 필요
    const resultTitle = resultData.titleKey; // 실제 다국어 텍스트로 교체
    const resultDesc = resultData.descKey;   // 실제 다국어 텍스트로 교체
    
    document.getElementById('travel-test-result-mbti').textContent = `당신의 MBTI-AT 유형은: ${type}`;
    document.getElementById('travel-test-result-title').textContent = resultTitle;
    document.getElementById('travel-test-result-description').textContent = resultDesc;
    document.getElementById('travel-test-match-rate').textContent = `여행 성향 일치율: ${matchRate}%`;

    // 4. 공유 링크 생성 (기존 시스템 함수 활용 가정)
    // 예: const shareUrl = generateShareLink(type, travelTest.userName, matchRate);
    // document.getElementById('travel-test-share-button').addEventListener('click', () => { navigator.clipboard.writeText(shareUrl); alert('링크 복사 완료!'); });
    
    // UI 전환: 질문 -> 결과
    document.getElementById('travel-test-questions-page').style.display = 'none';
    document.getElementById('travel-test-result-page').style.display = 'block';
}


// ====================================================================
// 3. 다국어 지원 정의 (Localization)
// - MVP 구현을 위해 최소한의 키만 정의합니다.
// - 기존 Localization 객체(예: 'lang')에 병합해야 합니다.
// ====================================================================

/**
 * TODO: 기존의 다국어 객체 (예: window.lang.ko)에 아래의 텍스트를 병합/추가해야 합니다.
 * 이 코드는 예시이며, 실제 질문과 결과 텍스트는 이전 단계에서 정의된 내용을 기반으로 작성해야 합니다.
 */
const travelTestLocalization_ko = {
    // ------------------- UI Text -------------------
    'travel_test_name_placeholder': '당신의 이름을 입력하세요 (공유용)',
    'travel_test_start_button': '여행지 테스트 시작',
    'travel_test_result_title_prefix': '당신에게 어울리는 한국 여행지',
    'travel_test_match_rate_label': '여행 성향 일치율',
    'travel_test_share_button': '결과 링크 복사 및 공유',

    // ------------------- Questions (18개) -------------------
    'travel_q1': '여행 계획은 상세하게 짜는 편인가요, 아니면 즉흥적인 발길에 맡기는 편인가요?',
    'travel_q2': '낯선 장소에 도착하면 사람들과 바로 어울리나요, 아니면 혼자 조용히 관찰부터 시작하나요?',
    // ... 나머지 16개 질문 텍스트 (이전 단계의 18개 질문 배분 로직에 맞춰)

    // ------------------- Results (32개) -------------------
    // ESTJA
    'r1_title': '부산 해운대 비즈니스 지구: 성공적인 프로젝트를 위한 효율적 휴식',
    'r1_desc': '당신은 확고한 집행자(ESTJ-A)입니다. 복잡한 상황에서도 현실적이고 효율적인 해결책을 찾는 능력이 탁월하며...', // 이전 단계에서 작성된 100자 이상 설명
    // ESTJT
    'r2_title': '서울 여의도 금융가 & 63빌딩: 미래 전략을 설계하는 고층 오피스 뷰',
    'r2_desc': '신중한 통솔자(ESTJ-T)인 당신은 모든 일에 있어 완벽과 책임감을 추구합니다. 여행 역시 단순한 유흥이 아닌...',
    // ... 나머지 30개 결과 Title 및 Desc (이전 단계에서 작성된 내용)
};


// 초기화 함수 호출 (웹앱 시작 시 단 한 번 실행)
initTravelTest();

// ====================================================================
// [참고] MVP 기능 정의 요약
// ====================================================================
// - 이름 입력: 'travel-test-name-input'
// - 테스트 시작: 'travel-test-start-button' 및 'initTravelTest'
// - 테스트 로직: 'processAnswer', 'calculateResult' (MBTI-AT 5축 로직 구현)
// - 결과 표시: 'travel-test-result-title', 'travel-test-result-description'
// - 지표 표시: 'travel-test-match-rate' ('여행 성향 일치율' 지표 구현)
// - 공유 기능: 'travel-test-share-button' (기존 시스템의 공유 함수 호출 필요)
// - 다국어 지원: Localization 객체를 통한 텍스트 분리 (TODO: localization_ko/en/ja/es 맵핑 필요)